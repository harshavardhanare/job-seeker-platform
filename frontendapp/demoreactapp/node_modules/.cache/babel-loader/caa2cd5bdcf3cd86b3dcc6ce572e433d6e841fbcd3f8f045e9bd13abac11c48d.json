{"ast":null,"code":"import React,{useState,useEffect}from'react';import axios from'axios';import'./jobseeker.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";export default function ViewAppliedJobs(){const[jobseekerData,setJobSeekerData]=useState(\"\");const[jobApplicants,setJobApplicants]=useState([]);const[error,setError]=useState('');useEffect(()=>{const storedJobSeekerData=localStorage.getItem('jobseeker');if(storedJobSeekerData){const parsedJobSeekerData=JSON.parse(storedJobSeekerData);setJobSeekerData(parsedJobSeekerData);}},[]);// Empty dependency array ensures it runs only once on mount\nuseEffect(()=>{if(jobseekerData){fetchJobApplicants();}});const fetchJobApplicants=async()=>{try{const response=await axios.get(`http://localhost:2032/appliedjobs/${jobseekerData.email}`);setJobApplicants(response.data);}catch(error){setError(error.response.data);}};return/*#__PURE__*/_jsxs(\"div\",{className:\"table-container\",children:[/*#__PURE__*/_jsx(\"h3\",{children:\"Job Application Status\"}),error&&/*#__PURE__*/_jsx(\"h4\",{align:\"center\",style:{color:\"red\"},children:error}),/*#__PURE__*/_jsxs(\"table\",{className:\"job-table mx-auto\",align:\"center\",children:[/*#__PURE__*/_jsx(\"thead\",{children:/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"th\",{children:\"Applicant ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Job ID\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Status\"}),/*#__PURE__*/_jsx(\"th\",{children:\"Applied Time\"})]})}),/*#__PURE__*/_jsx(\"tbody\",{children:Array.isArray(jobApplicants)&&jobApplicants.length>0?jobApplicants.map((applicant,index)=>/*#__PURE__*/_jsxs(\"tr\",{children:[/*#__PURE__*/_jsx(\"td\",{children:applicant.applicantId}),/*#__PURE__*/_jsx(\"td\",{children:applicant.jobid}),/*#__PURE__*/_jsx(\"td\",{style:{backgroundColor:applicant.jobStatus===\"SELECTED\"?\"green\":{backgroundColor:applicant.jobStatus===\"REJECTED\"?\"red\":\"blue\"}},children:applicant.jobStatus===\"SELECTED\"?\"SELECTED\":applicant.jobStatus==='REJECTED'?'REJECTED':'APPLIED'}),/*#__PURE__*/_jsx(\"td\",{children:applicant.appliedTime})]},index)):/*#__PURE__*/_jsx(\"tr\",{children:/*#__PURE__*/_jsx(\"td\",{colSpan:\"4\",children:\"No Job Applications found\"})})})]})]});}","map":{"version":3,"names":["React","useState","useEffect","axios","jsx","_jsx","jsxs","_jsxs","ViewAppliedJobs","jobseekerData","setJobSeekerData","jobApplicants","setJobApplicants","error","setError","storedJobSeekerData","localStorage","getItem","parsedJobSeekerData","JSON","parse","fetchJobApplicants","response","get","email","data","className","children","align","style","color","Array","isArray","length","map","applicant","index","applicantId","jobid","backgroundColor","jobStatus","appliedTime","colSpan"],"sources":["C:/MSWDPROJECT/frontendapp/demoreactapp/src/jobseeker/ViewAppliedJobs.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport axios from 'axios';\r\nimport './jobseeker.css';\r\n\r\nexport default function ViewAppliedJobs() {\r\n    const [jobseekerData, setJobSeekerData] = useState(\"\");\r\n    const [jobApplicants, setJobApplicants] = useState([]);\r\n    const [error, setError] = useState('');\r\n\r\n    useEffect(() => {\r\n        const storedJobSeekerData = localStorage.getItem('jobseeker');\r\n        if (storedJobSeekerData) {\r\n            const parsedJobSeekerData = JSON.parse(storedJobSeekerData);\r\n            setJobSeekerData(parsedJobSeekerData);\r\n        }\r\n    }, []); // Empty dependency array ensures it runs only once on mount\r\n\r\n    useEffect(() => {\r\n        if (jobseekerData) {\r\n            fetchJobApplicants();\r\n        }\r\n    }); \r\n\r\n    const fetchJobApplicants = async () => {\r\n        try {\r\n            const response = await axios.get(`http://localhost:2032/appliedjobs/${jobseekerData.email}`);\r\n            setJobApplicants(response.data);\r\n        } catch (error) {\r\n            setError(error.response.data);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"table-container\">\r\n            <h3>Job Application Status</h3>\r\n            {error && <h4 align=\"center\" style={{ color: \"red\" }}>{error}</h4>}\r\n            <table className=\"job-table mx-auto\" align='center'>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Applicant ID</th>\r\n                        <th>Job ID</th>\r\n                        <th>Status</th>\r\n                        <th>Applied Time</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {Array.isArray(jobApplicants) && jobApplicants.length > 0 ? (\r\n                        jobApplicants.map((applicant, index) => (\r\n                            <tr key={index}>\r\n                                <td>{applicant.applicantId}</td>\r\n                                <td>{applicant.jobid}</td>\r\n\r\n               \r\n                                <td style={{backgroundColor:applicant.jobStatus === \"SELECTED\"?\"green\":{backgroundColor:applicant.jobStatus===\"REJECTED\"?\"red\":\"blue\"}}}>\r\n                  {applicant.jobStatus === \"SELECTED\"?\"SELECTED\":(applicant.jobStatus==='REJECTED'?'REJECTED':'APPLIED')}\r\n                 \r\n                </td>\r\n                \r\n                \r\n                \r\n                                <td>{applicant.appliedTime}</td>\r\n                            </tr>\r\n                        ))\r\n                    ) : (\r\n                        <tr>\r\n                            <td colSpan=\"4\">No Job Applications found</td>\r\n                        </tr>\r\n                    )}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n    );\r\n}"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}